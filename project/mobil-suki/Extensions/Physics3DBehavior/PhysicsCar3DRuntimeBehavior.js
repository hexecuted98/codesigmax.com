var gdjs;(function(c){class x extends c.RuntimeBehavior{constructor(e,t,i){super(e,t,i);this._physics3D=null;this._vehicleController=null;this._stepListener=null;this._vehicleCollisionTester=null;this._destroyedDuringFrameLogic=!1;this._currentSteerRatio=0;this._previousForward=1;this._hasPressedForwardKey=!1;this._hasPressedBackwardKey=!1;this._hasPressedRightKey=!1;this._hasPressedLeftKey=!1;this._hasPressedHandBrakeKey=!1;this._acceleratorStickForce=0;this._steeringStickForce=0;this._wasLeftKeyPressed=!1;this._wasRightKeyPressed=!1;this._wasForwardKeyPressed=!1;this._wasBackwardKeyPressed=!1;this._wasHandBrakeKeyPressed=!1;this._previousAcceleratorStickForce=0;this._previousSteeringStickForce=0;this._dontClearInputsBetweenFrames=!1;this.owner3D=i,this._physics3DBehaviorName=t.physics3D,this._sharedData=c.Physics3DSharedData.getSharedData(e.getScene(),t.Physics3D),this._steerAngleMax=t.steerAngleMax,this._beginningSteerSpeed=t.beginningSteerSpeed,this._endSteerSpeed=t.endSteerSpeed,this._engineTorqueMax=t.engineTorqueMax,this._engineSpeedMax=t.engineSpeedMax,this._engineInertia=t.engineInertia,this._reverseGearRatios=[t.reverseGearRatio1],this._gearRatios=[t.gearRatio1,t.gearRatio2,t.gearRatio3,t.gearRatio4,t.gearRatio5,t.gearRatio6],this._backWheelOffsetX=t.backWheelOffsetX,this._frontWheelOffsetX=t.frontWheelOffsetX,this._wheelOffsetY=t.wheelOffsetY,this._wheelOffsetZ=t.wheelOffsetZ,this._wheelRadius=t.wheelRadius,this._wheelWidth=t.wheelWidth,this._brakeTorqueMax=t.brakeTorqueMax,this._handBrakeTorqueMax=t.handBrakeTorqueMax,this._hasBackWheelDrive=t.hasBackWheelDrive,this._hasFrontWheelDrive=t.hasFrontWheelDrive,this._pitchRollAngleMax=t.pitchRollAngleMax}getVec3(e,t,i){const s=this._sharedData._tempVec3;return s.Set(e,t,i),s}getPhysics3D(){if(this._destroyedDuringFrameLogic)return null;if(this._physics3D)return this._physics3D;const e=this.owner.getBehavior(this._physics3DBehaviorName),t=e._sharedData;return this._physics3D={behavior:e},t.registerHook(this),e.bodyUpdater=new c.PhysicsCar3DRuntimeBehavior.VehicleBodyUpdater(this,e.bodyUpdater),e.recreateBody(),this._physics3D}updateFromBehaviorData(e,t){return e.steerAngleMax!==t.steerAngleMax&&this.setSteerAngleMax(t.steerAngleMax),e.beginningSteerSpeed!==t.beginningSteerSpeed&&this.setBeginningSteerSpeed(t.beginningSteerSpeed),e.endSteerSpeed!==t.endSteerSpeed&&this.setEndSteerSpeed(t.endSteerSpeed),e.engineTorqueMax!==t.engineTorqueMax&&this.setEngineTorqueMax(t.engineTorqueMax),e.engineSpeedMax!==t.engineSpeedMax&&this.setEngineSpeedMax(t.engineSpeedMax),e.engineInertia!==t.engineInertia&&this.setEngineInertia(t.engineInertia),e.reverseGearRatio1!==t.reverseGearRatio1&&this.setGearRatio(-1,t.reverseGearRatio1),e.gearRatio1!==t.gearRatio1&&this.setGearRatio(1,t.gearRatio1),e.gearRatio2!==t.gearRatio2&&this.setGearRatio(2,t.gearRatio2),e.gearRatio3!==t.gearRatio3&&this.setGearRatio(3,t.gearRatio3),e.gearRatio4!==t.gearRatio4&&this.setGearRatio(4,t.gearRatio4),e.gearRatio5!==t.gearRatio5&&this.setGearRatio(5,t.gearRatio5),e.gearRatio6!==t.gearRatio6&&this.setGearRatio(6,t.gearRatio6),e.backWheelOffsetX!==t.backWheelOffsetX&&this.setBackWheelOffsetX(t.backWheelOffsetX),e.frontWheelOffsetX!==t.frontWheelOffsetX&&this.setFrontWheelOffsetX(t.frontWheelOffsetX),e.wheelOffsetY!==t.wheelOffsetY&&this.setWheelOffsetY(t.wheelOffsetY),e.wheelOffsetZ!==t.wheelOffsetZ&&this.setWheelOffsetZ(t.wheelOffsetZ),e.wheelRadius!==t.wheelRadius&&this.setWheelRadius(t.wheelRadius),e.wheelWidth!==t.wheelWidth&&this.setWheelWidth(t.wheelWidth),e.brakeTorqueMax!==t.brakeTorqueMax&&this.setBrakeTorqueMax(t.brakeTorqueMax),e.handBrakeTorqueMax!==t.handBrakeTorqueMax&&this.setHandBrakeTorqueMax(t.handBrakeTorqueMax),e.hasBackWheelDrive!==t.hasBackWheelDrive&&this.setBackWheelDrive(t.hasBackWheelDrive),e.hasFrontWheelDrive!==t.hasFrontWheelDrive&&this.setFrontWheelDrive(t.hasFrontWheelDrive),e.pitchRollAngleMax!==t.pitchRollAngleMax&&this.setPitchRollAngleMax(t.pitchRollAngleMax),!0}getNetworkSyncData(){return this._dontClearInputsBetweenFrames=!1,{...super.getNetworkSyncData(),props:{lek:this._wasLeftKeyPressed,rik:this._wasRightKeyPressed,upk:this._wasForwardKeyPressed,dok:this._wasBackwardKeyPressed,hbk:this._wasHandBrakeKeyPressed,asf:this._previousAcceleratorStickForce,ssf:this._previousSteeringStickForce,etm:this._engineTorqueMax,esm:this._engineSpeedMax,ei:this._engineInertia}}}updateFromNetworkSyncData(e){super.updateFromNetworkSyncData(e);const t=e.props;this._hasPressedForwardKey=t.upk,this._hasPressedBackwardKey=t.dok,this._hasPressedLeftKey=t.lek,this._hasPressedRightKey=t.rik,this._hasPressedHandBrakeKey=t.hbk,this._acceleratorStickForce=t.asf,this._steeringStickForce=t.ssf,this._engineTorqueMax=t.etm,this._engineSpeedMax=t.esm,this._engineInertia=t.ei,this._dontClearInputsBetweenFrames=!0}_getPhysicsPosition(e){const t=this.getPhysics3D();if(!t)return e.Set(0,0,0),e;const{behavior:i}=t;return e.Set(this.owner3D.getCenterXInScene()*this._sharedData.worldInvScale,this.owner3D.getCenterYInScene()*this._sharedData.worldInvScale,this.owner3D.getZ()*this._sharedData.worldInvScale+i._shapeHalfDepth),e}onDeActivate(){this._stepListener&&this._sharedData.physicsSystem.RemoveStepListener(this._stepListener)}onActivate(){this._stepListener&&this._sharedData.physicsSystem.AddStepListener(this._stepListener)}onDestroy(){if(!this._vehicleController)return;this._destroyedDuringFrameLogic=!0,this.onDeActivate(),this._stepListener&&(Jolt.destroy(this._stepListener),this._stepListener=null);const e=this._vehicleController.GetConstraint();this._sharedData.physicsSystem.RemoveConstraint(e),this._vehicleController=null,this._vehicleCollisionTester=null,this._physics3D&&(this._physics3D=null)}doStepPreEvents(e){this.getPhysics3D()}doStepPostEvents(e){this.getPhysics3D()}doBeforePhysicsStep(e){if(!this.activated())return;const t=this.getPhysics3D();if(!t)return;const{behavior:i}=t;if(!this._vehicleController)return;const s=i._body;if(!s)return;const o=this._steeringStickForce||(this._hasPressedLeftKey?-1:0)+(this._hasPressedRightKey?1:0);if(o===0)this._currentSteerRatio=0;else{const d=c.evtTools.common.lerp(this._beginningSteerSpeed,this._endSteerSpeed,Math.abs(this._currentSteerRatio));o<0&&(this._currentSteerRatio=Math.min(0,this._currentSteerRatio),this._currentSteerRatio+=o*d*e/this._steerAngleMax,this._currentSteerRatio=Math.max(-1,this._currentSteerRatio)),o>0&&(this._currentSteerRatio=Math.max(0,this._currentSteerRatio),this._currentSteerRatio+=o*d*e/this._steerAngleMax,this._currentSteerRatio=Math.min(1,this._currentSteerRatio))}let n=0,l=this._acceleratorStickForce||(this._hasPressedBackwardKey?-1:0)+(this._hasPressedForwardKey?1:0);if(this._previousForward*l<0){const d=s.GetRotation().InverseRotate(s.GetLinearVelocity()).GetX();l>0&&d<-.1||l<0&&d>.1?(l=0,n=1):this._previousForward=l}let r=0;this._hasPressedHandBrakeKey&&(l=0,r=1),this._vehicleController.SetDriverInput(l,-this._currentSteerRatio,n,r),(l!==0||this._currentSteerRatio!==0||n!==0||r!==0)&&this._sharedData.bodyInterface.ActivateBody(s.GetID()),this._wasForwardKeyPressed=this._hasPressedForwardKey,this._wasBackwardKeyPressed=this._hasPressedBackwardKey,this._wasRightKeyPressed=this._hasPressedRightKey,this._wasLeftKeyPressed=this._hasPressedLeftKey,this._wasHandBrakeKeyPressed=this._hasPressedHandBrakeKey,this._previousAcceleratorStickForce=this._acceleratorStickForce,this._previousSteeringStickForce=this._steeringStickForce,this._dontClearInputsBetweenFrames||(this._hasPressedForwardKey=!1,this._hasPressedBackwardKey=!1,this._hasPressedRightKey=!1,this._hasPressedLeftKey=!1,this._hasPressedHandBrakeKey=!1,this._acceleratorStickForce=0,this._steeringStickForce=0)}onObjectHotReloaded(){}simulateForwardKey(){this._hasPressedForwardKey=!0}wasForwardKeyPressed(){return this._wasForwardKeyPressed}simulateBackwardKey(){this._hasPressedBackwardKey=!0}wasBackwardKeyPressed(){return this._wasBackwardKeyPressed}simulateRightKey(){this._hasPressedRightKey=!0}wasRightKeyPressed(){return this._wasRightKeyPressed}simulateLeftKey(){this._hasPressedLeftKey=!0}wasLeftKeyPressed(){return this._wasLeftKeyPressed}simulateHandBrakeKey(){this._hasPressedHandBrakeKey=!0}wasHandBrakeKeyPressed(){return this._wasHandBrakeKeyPressed}simulateAcceleratorStick(e){this._acceleratorStickForce=c.evtTools.common.clamp(-1,1,e)}simulateSteeringStick(e){this._steeringStickForce=c.evtTools.common.clamp(-1,1,e)}getAcceleratorStickForce(){return this._acceleratorStickForce}getSteeringStickForce(){return this._steeringStickForce}getPreviousAcceleratorStickForce(){return this._previousAcceleratorStickForce}getPreviousSteeringStickForce(){return this._previousSteeringStickForce}getSteerAngle(){return this._currentSteerRatio*this._steerAngleMax}getEngineSpeed(){return this._vehicleController?this._vehicleController.GetEngine().GetCurrentRPM():0}getCurrentGear(){return this._vehicleController?this._vehicleController.GetTransmission().GetCurrentGear():0}getSteerAngleMax(){return this._steerAngleMax}setSteerAngleMax(e){this._steerAngleMax=e}getBeginningSteerSpeed(){return this._beginningSteerSpeed}setBeginningSteerSpeed(e){this._beginningSteerSpeed=e}getEndSteerSpeed(){return this._endSteerSpeed}setEndSteerSpeed(e){this._endSteerSpeed=e}invalidateShape(){const e=this.getPhysics3D();if(!e)return;const{behavior:t}=e;t._needToRecreateShape=!0}getEngineTorqueMax(){return this._engineTorqueMax}setEngineTorqueMax(e){this._engineTorqueMax=e,!!this._vehicleController&&(this._vehicleController.GetEngine().mMaxTorque=e)}getEngineSpeedMax(){return this._engineSpeedMax}setEngineSpeedMax(e){this._engineSpeedMax=e,!!this._vehicleController&&(this._vehicleController.GetEngine().mMaxRPM=e)}getEngineInertia(){return this._engineInertia}setEngineInertia(e){this._engineInertia=e,!!this._vehicleController&&(this._vehicleController.GetEngine().mInertia=e)}getGearRatio(e){return e===0?0:e<0?this._reverseGearRatios[-e-1]||0:this._gearRatios[e-1]||0}setGearRatio(e,t){if(e>0){if(this._gearRatios[e-1]=t,!this._vehicleController)return;this._updateGearRatios()}else e<0&&(this._reverseGearRatios[-e-1]=t,this._updateReverseGearRatios())}_updateGearRatios(){if(!this._vehicleController)return;const e=this._vehicleController.GetTransmission().mGearRatios;e.clear();let t=Number.POSITIVE_INFINITY;for(let i=0;i<this._gearRatios.length;i++){const s=this._gearRatios[i];0<s&&s<t&&(e.push_back(s),t=s)}}_updateReverseGearRatios(){if(!this._vehicleController)return;const e=this._vehicleController.GetTransmission().mReverseGearRatios;e.clear();let t=Number.NEGATIVE_INFINITY;for(let i=0;i<this._reverseGearRatios.length;i++){const s=this._reverseGearRatios[i];t<s&&s<0&&(e.push_back(s),t=s)}}getBackWheelOffsetX(){return this._backWheelOffsetX}setBackWheelOffsetX(e){this._backWheelOffsetX=e,this._updateWheels()}getFrontWheelOffsetX(){return this._frontWheelOffsetX}setFrontWheelOffsetX(e){this._frontWheelOffsetX=e,this._updateWheels()}getWheelOffsetY(){return this._wheelOffsetY}setWheelOffsetY(e){this._wheelOffsetY=e,this._updateWheels()}getWheelOffsetZ(){return this._wheelOffsetZ}setWheelOffsetZ(e){this._wheelOffsetY=e,this._updateWheels()}getWheelRadius(){return this._wheelRadius}setWheelRadius(e){this._wheelRadius=e,this._updateWheels()}getWheelWidth(){return this._wheelWidth}setWheelWidth(e){this._wheelWidth=e,this._updateWheels()}getBrakeTorqueMax(){return this._brakeTorqueMax}setBrakeTorqueMax(e){this._brakeTorqueMax=e,this._updateWheels()}getHandBrakeTorqueMax(){return this._handBrakeTorqueMax}setHandBrakeTorqueMax(e){this._handBrakeTorqueMax=e,this._updateWheels()}hasBackWheelDrive(){return this._hasBackWheelDrive}setBackWheelDrive(e){this._hasBackWheelDrive=e,this.invalidateShape()}hasFrontWheelDrive(){return this._hasBackWheelDrive}setFrontWheelDrive(e){this._hasBackWheelDrive=e,this.invalidateShape()}getPitchRollAngleMax(){return this._pitchRollAngleMax}setPitchRollAngleMax(e){this._pitchRollAngleMax=e,!!this._vehicleController&&this._vehicleController.GetConstraint().SetMaxPitchRollAngle(e)}isOnFloor(){if(!!this._vehicleController){for(let e=0;e<4;e++)if(Jolt.castObject(this._vehicleController.GetConstraint().GetWheel(e),Jolt.WheelWV).HasContact())return!0;return!1}}_updateWheels(){if(!this._vehicleController)return;const e=this.getPhysics3D();if(!e)return;const{behavior:t}=e,i=t._shapeHalfWidth,s=t._shapeHalfHeight,o=t._shapeHalfDepth,n=t.shapeScale*t._sharedData.worldInvScale,h=this._wheelRadius*n,l=this._wheelWidth*n,r=i-h+this._backWheelOffsetX*n,d=i-h+this._frontWheelOffsetX*n,u=s-l/2+this._wheelOffsetY*n,p=o+(-t.shapeOffsetZ+this._wheelOffsetZ)*n,S=h,_=1.5*S,g=this._vehicleController.GetConstraint(),R=g.GetWheel(0).GetSettings();R.mPosition=this.getVec3(d,-u,-p);const v=g.GetWheel(1).GetSettings();v.mPosition=this.getVec3(d,u,-p);const y=g.GetWheel(2).GetSettings();y.mPosition=this.getVec3(-r,-u,-p);const m=g.GetWheel(3).GetSettings();m.mPosition=this.getVec3(-r,u,-p);for(let a=0;a<4;a++){const f=Jolt.castObject(g.GetWheel(a),Jolt.WheelWV).GetSettings();f.mRadius=h,f.mWidth=l,f.mSuspensionMinLength=S,f.mSuspensionMaxLength=_,f.mMaxBrakeTorque=this._brakeTorqueMax,a>=2&&(f.mMaxHandBrakeTorque=this._handBrakeTorqueMax)}}}c.PhysicsCar3DRuntimeBehavior=x,c.registerBehavior("Physics3D::PhysicsCar3D",c.PhysicsCar3DRuntimeBehavior),function(e){class C{constructor(i,s){this.carBehavior=i,this.physicsBodyUpdater=s}getVec3(i,s,o){const n=this.carBehavior._sharedData._tempVec3;return n.Set(i,s,o),n}createAndAddBody(){const i=this.carBehavior.getPhysics3D();if(!i)return null;const{behavior:s}=i,{_sharedData:o}=this.carBehavior,n=s.createShape(),h=new Jolt.BodyCreationSettings(n,this.carBehavior._getPhysicsPosition(o.getRVec3(0,0,0)),s._getPhysicsRotation(o.getQuat(0,0,0,1)),Jolt.EMotionType_Dynamic,s.getBodyLayer());h.mFriction=s.friction,h.mRestitution=s.restitution,h.mLinearDamping=s.linearDamping,h.mAngularDamping=s.angularDamping,h.mGravityFactor=s.gravityScale,s.massOverride>0&&(h.mOverrideMassProperties=Jolt.EOverrideMassProperties_CalculateInertia,h.mMassPropertiesOverride.mMass=s.massOverride);const l=o.bodyInterface.CreateBody(h);Jolt.destroy(h),o.bodyInterface.AddBody(l.GetID(),Jolt.EActivation_Activate);const r=new Jolt.VehicleConstraintSettings;r.mUp=this.getVec3(0,0,1),r.mForward=this.getVec3(1,0,0),r.mMaxPitchRollAngle=c.toRad(this.carBehavior._pitchRollAngleMax);const d=0,u=1,p=2,S=3;{const a=W=>{W.mWheelUp=this.getVec3(0,0,1),W.mWheelForward=this.getVec3(1,0,0),W.mSuspensionDirection=this.getVec3(0,0,-1),W.mSteeringAxis=this.getVec3(0,0,1)};r.mWheels.clear();const f=new Jolt.WheelSettingsWV;f.mMaxSteerAngle=c.toRad(this.carBehavior._steerAngleMax),f.mMaxHandBrakeTorque=0,a(f),r.mWheels.push_back(f);const k=new Jolt.WheelSettingsWV;k.mMaxSteerAngle=c.toRad(this.carBehavior._steerAngleMax),k.mMaxHandBrakeTorque=0,a(k),r.mWheels.push_back(k);const P=new Jolt.WheelSettingsWV;P.mMaxSteerAngle=0,a(P),r.mWheels.push_back(P);const M=new Jolt.WheelSettingsWV;M.mMaxSteerAngle=0,a(M),r.mWheels.push_back(M)}const _=new Jolt.WheeledVehicleControllerSettings;_.mEngine.mMaxTorque=this.carBehavior._engineTorqueMax,_.mEngine.mMaxRPM=this.carBehavior._engineSpeedMax,_.mEngine.mInertia=this.carBehavior._engineInertia,r.mController=_;const g=this.carBehavior._hasBackWheelDrive&&this.carBehavior._hasFrontWheelDrive;if(_.mDifferentials.clear(),this.carBehavior._hasFrontWheelDrive){const a=new Jolt.VehicleDifferentialSettings;a.mLeftWheel=d,a.mRightWheel=u,g&&(a.mEngineTorqueRatio=.5),_.mDifferentials.push_back(a)}if(this.carBehavior._hasBackWheelDrive){const a=new Jolt.VehicleDifferentialSettings;a.mLeftWheel=p,a.mRightWheel=S,g&&(a.mEngineTorqueRatio=.5),_.mDifferentials.push_back(a)}r.mAntiRollBars.clear();const R=new Jolt.VehicleAntiRollBar;R.mLeftWheel=d,R.mRightWheel=u;const v=new Jolt.VehicleAntiRollBar;v.mLeftWheel=p,v.mRightWheel=S,r.mAntiRollBars.push_back(R),r.mAntiRollBars.push_back(v);const y=new Jolt.VehicleConstraint(l,r);Jolt.destroy(r);const m=new Jolt.VehicleCollisionTesterCastCylinder(s.getBodyLayer(),.05);if(y.SetVehicleCollisionTester(m),this.carBehavior._vehicleCollisionTester=m,this.carBehavior._vehicleController){const a=this.carBehavior._vehicleController.GetConstraint();this.carBehavior._sharedData.physicsSystem.RemoveConstraint(a)}return o.physicsSystem.AddConstraint(y),this.carBehavior._vehicleController=Jolt.castObject(y.GetController(),Jolt.WheeledVehicleController),this.carBehavior._stepListener&&o.physicsSystem.RemoveStepListener(this.carBehavior._stepListener),this.carBehavior._stepListener=new Jolt.VehicleConstraintStepListener(y),o.physicsSystem.AddStepListener(this.carBehavior._stepListener),this.carBehavior._updateWheels(),this.carBehavior._updateGearRatios(),this.carBehavior._updateReverseGearRatios(),l}updateObjectFromBody(){this.physicsBodyUpdater.updateObjectFromBody()}updateBodyFromObject(){this.physicsBodyUpdater.updateBodyFromObject()}recreateShape(){this.physicsBodyUpdater.recreateShape(),this.carBehavior._updateWheels()}destroyBody(){this.carBehavior.onDestroy(),this.physicsBodyUpdater.destroyBody()}}e.VehicleBodyUpdater=C}(x=c.PhysicsCar3DRuntimeBehavior||(c.PhysicsCar3DRuntimeBehavior={}))})(gdjs||(gdjs={}));
//# sourceMappingURL=PhysicsCar3DRuntimeBehavior.js.map
